Система автоматической проверки кода.

Введение
На ряду с системами контроля версий написанного кода, возникает необходимость в автоматической системе запуска тестирования. 
Автоматизация тестирования избавляет от рутинной работы по компиляции, запуску и ведения журнала по результатам тестирования. Данные системы находят широкое применение в сфере разработки и как частный случай - обучения программированию.

Назначение
Сисема предназанчена для храниения, запуска и тестироваиня кода написанного в рамках решения учебных задач, а так же для ведения журнала прохождения тестов.

Общее описание
Ядром системы является репозиторий с задачамми. Функционал системы реализован с помощью скриптов BASH. Пользователями системы являются преподаватель и студенты. 
Преподаватель размещает в репозитории задач шаблон проекта(дистрибутив) и описание задачи. В препозиторий тестов помещется шабллон(дистрибутив) теста. Что бы тест прошел удачно необходимы файлы с реализацией, которые и должен реализовать студент в шаблоне проекта. Преподаватель имеет возможность просмотра журнала тестирования.
Студент копирует с свой локальный репозиторий шаблон(дистрибутив) проекта. Реализует необходимый функционал(файлы с реализацией). Для запуска теста выполняет отпавку кода на проверку и получает результат об успешности тестирования. Если необходимо корректирует код и повторяет отправку кода на проверку. 
Запуск тестирования написанного кода происходит автоматически. Результаты тестирования выдаются студенту, а также заносятся в журнал.

Операционная среда
Машина(сервер) с операционной системой Unix, командная оболочка bash. С установленной сисемой контроля версий Git. А также с возможностью подклчаться по SSH и "белым" IP.

Функции системы

Предоставление доступа к заданию.
Преподаватель выдавая задание студентам говорит название задания и язык програмирования. Студент подклюяается к серверу по SSH, заходит в свою папку и вызывает утилиту "get_task <lang> <task>" параметр lang - язык программирования, параметр task -  название задачи. В результате будет скопирована папка с дистрибутивои и описанием задания.

Отправка кода на проверку.
Студент реализовав необходимый код вызывает утилиту "submit". Написаный студентом код копируется на удаленный репозиторий в ветку с именем пользователя(студента).

Автоматическое тестирование 
Сразу после отправки кода студентом запускается автоматическое тестирование. Создается временная папка в /tmp/<имя пользователя(студента)>. В нее копируется дистрибутив тестов для этого задания. В зависимости от языка программирования вызывается компилятор и тест запускается на выполнение. Результат о прохождении или не прохождении теста отправляется пользователю(студенту) и заносится в журнал прохождения тестов.

Предоставление информации из журнала.
Преподаватель имеет возможность просматривать журнал выполнения тестов. Для этого необходимо воспользоваться утилитой "showdata". Утилита поддерживает выборку по прошедшим тестам, непрошедшим тестам, а так же по тестам от конкретного пользователя(студента).

Разворачивание системы
Копирование файлов 
Необходимо скопировать в папку /usr/bin/: 
showdata;
updateDB;
get_task;
runTest;
submit;
testC(для тестирования програм на С).

В папку /usr/bin/share/git-core/templates/hooks/ файл post-receive.

Инициализировать репозиторий с заданиями. 
Задания групируются в папку с названием языка:
путь к дистрибутивам / имя языка / название задания/
содержимое папки с названием задания помещаетя под версионный контроль Git. 

Добавить переменную окружения PATH_DISTR, которая хранит путь к дистрибутивам.

